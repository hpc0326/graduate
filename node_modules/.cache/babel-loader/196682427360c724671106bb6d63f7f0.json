{"ast":null,"code":"import _slicedToArray from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/parallels/Desktop/gp/src/Map_Pic.js\";\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\n\nfunction App() {\n  var _useState = useState({\n    lat: 25,\n    lng: 121.5\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      finFlag = _useState4[0],\n      setFin = _useState4[1];\n\n  var getLocation = function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(getCoordinates, handleLocationError);\n    } else {\n      alert(\"Geolocaiton is not supported in the browser\");\n    }\n  };\n\n  var getCoordinates = function getCoordinates(position) {\n    setState({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    });\n    setFin(finFlag + 1);\n  };\n\n  var handleLocationError = function handleLocationError(error) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\"User denied the request for Geolocation\");\n        break;\n\n      case error.POSITION_UNAVAILABLE:\n        alert('Location information is unavailable.');\n        break;\n\n      case error.TIMEOUT:\n        alert(\"The request to get user location timed out.\");\n        break;\n\n      case error.UNKNOWN_ERROR:\n        alert('An unknown error occurred.');\n        break;\n\n      default:\n        alert('An unknown error occurred.');\n    }\n  };\n\n  var _useLoadScript = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\"\n  }),\n      isLoaded = _useLoadScript.isLoaded;\n\n  var center = {\n    lat: state.lat,\n    lng: state.lng\n  };\n  var containerStyle = {\n    top: '0px',\n    left: '0px',\n    width: '100%',\n    height: '50vh'\n  };\n  /*if(!isLoaded || finFlag === 0){\n    getLocation();\n    return <div>Loading...</div>;\n  } */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./img/ugly.png\"),\n    id: \"ugly\",\n    alt: \"y\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./img/placeholder.png\"),\n    id: \"place-Holder\",\n    alt: \"try\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","GoogleMap","useLoadScript","Marker","App","lat","lng","state","setState","finFlag","setFin","getLocation","navigator","geolocation","getCurrentPosition","getCoordinates","handleLocationError","alert","position","coords","latitude","longitude","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","googleMapsApiKey","isLoaded","center","containerStyle","top","left","width","height","require"],"sources":["/home/parallels/Desktop/gp/src/Map_Pic.js"],"sourcesContent":["import React , {useState } from \"react\";\nimport './App.css'\nimport { GoogleMap , useLoadScript , Marker} from '@react-google-maps/api';\n\nfunction App(){\n  const [state , setState] = useState({lat:25 , lng:121.5});\n  const [finFlag , setFin] = useState(0);\n  \n\n  const getLocation = () =>{\n\n    if(navigator.geolocation){\n      navigator.geolocation.getCurrentPosition(getCoordinates , handleLocationError);\n      \n    }else{\n      alert(\"Geolocaiton is not supported in the browser\")\n    }\n  }\n  \n  const getCoordinates = (position) => {\n      setState({\n      lat: position.coords.latitude,\n      lng:position.coords.longitude\n    })\n    setFin(finFlag + 1);\n  }\n\n \n\n  const handleLocationError = (error) =>{\n    switch(error.code){\n      case error.PERMISSION_DENIED:\n        alert(\"User denied the request for Geolocation\")\n        break;\n      case error.POSITION_UNAVAILABLE:\n        alert('Location information is unavailable.')\n        break;\n      case error.TIMEOUT:\n        alert(\"The request to get user location timed out.\")\n        break;\n      case error.UNKNOWN_ERROR:\n        alert('An unknown error occurred.')\n        break;\n      default:\n        alert('An unknown error occurred.')\n    }\n  }\n\n  const {isLoaded } = useLoadScript({\n    googleMapsApiKey :\"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\",\n    \n  });\n  \n  \n\n  const center = {lat :state.lat, lng :state.lng};\n  \n  const containerStyle = {\n    top:'0px',\n    left:'0px',\n    width: '100%',\n    height: '50vh'\n  };\n  \n  /*if(!isLoaded || finFlag === 0){\n    getLocation();\n    return <div>Loading...</div>;\n  } */\n\n  \n  return (\n    <div >\n        \n      <span>\n      <img src={require(\"./img/ugly.png\")} id=\"ugly\" alt=\"y\"/>\n        <img src={require(\"./img/placeholder.png\")} id=\"place-Holder\" alt=\"try\"/>\n      </span>\n    </div>\n  )\n \n\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,SAAT,EAAqBC,aAArB,EAAqCC,MAArC,QAAkD,wBAAlD;;AAEA,SAASC,GAAT,GAAc;EAAA,gBACeJ,QAAQ,CAAC;IAACK,GAAG,EAAC,EAAL;IAAUC,GAAG,EAAC;EAAd,CAAD,CADvB;EAAA;EAAA,IACLC,KADK;EAAA,IACGC,QADH;;EAAA,iBAEeR,QAAQ,CAAC,CAAD,CAFvB;EAAA;EAAA,IAELS,OAFK;EAAA,IAEKC,MAFL;;EAKZ,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAK;IAEvB,IAAGC,SAAS,CAACC,WAAb,EAAyB;MACvBD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,cAAzC,EAA0DC,mBAA1D;IAED,CAHD,MAGK;MACHC,KAAK,CAAC,6CAAD,CAAL;IACD;EACF,CARD;;EAUA,IAAMF,cAAc,GAAG,SAAjBA,cAAiB,CAACG,QAAD,EAAc;IACjCV,QAAQ,CAAC;MACTH,GAAG,EAAEa,QAAQ,CAACC,MAAT,CAAgBC,QADZ;MAETd,GAAG,EAACY,QAAQ,CAACC,MAAT,CAAgBE;IAFX,CAAD,CAAR;IAIFX,MAAM,CAACD,OAAO,GAAG,CAAX,CAAN;EACD,CAND;;EAUA,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACM,KAAD,EAAU;IACpC,QAAOA,KAAK,CAACC,IAAb;MACE,KAAKD,KAAK,CAACE,iBAAX;QACEP,KAAK,CAAC,yCAAD,CAAL;QACA;;MACF,KAAKK,KAAK,CAACG,oBAAX;QACER,KAAK,CAAC,sCAAD,CAAL;QACA;;MACF,KAAKK,KAAK,CAACI,OAAX;QACET,KAAK,CAAC,6CAAD,CAAL;QACA;;MACF,KAAKK,KAAK,CAACK,aAAX;QACEV,KAAK,CAAC,4BAAD,CAAL;QACA;;MACF;QACEA,KAAK,CAAC,4BAAD,CAAL;IAdJ;EAgBD,CAjBD;;EAzBY,qBA4CQf,aAAa,CAAC;IAChC0B,gBAAgB,EAAE;EADc,CAAD,CA5CrB;EAAA,IA4CLC,QA5CK,kBA4CLA,QA5CK;;EAmDZ,IAAMC,MAAM,GAAG;IAACzB,GAAG,EAAEE,KAAK,CAACF,GAAZ;IAAiBC,GAAG,EAAEC,KAAK,CAACD;EAA5B,CAAf;EAEA,IAAMyB,cAAc,GAAG;IACrBC,GAAG,EAAC,KADiB;IAErBC,IAAI,EAAC,KAFgB;IAGrBC,KAAK,EAAE,MAHc;IAIrBC,MAAM,EAAE;EAJa,CAAvB;EAOA;AACF;AACA;AACA;;EAGE,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAK,GAAG,EAAEC,OAAO,CAAC,gBAAD,CAAjB;IAAqC,EAAE,EAAC,MAAxC;IAA+C,GAAG,EAAC,GAAnD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADA,eAEE;IAAK,GAAG,EAAEA,OAAO,CAAC,uBAAD,CAAjB;IAA4C,EAAE,EAAC,cAA/C;IAA8D,GAAG,EAAC,KAAlE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CAFF,CADF;AAWD;;AAED,eAAehC,GAAf"},"metadata":{},"sourceType":"module"}