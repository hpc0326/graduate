{"ast":null,"code":"import _slicedToArray from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/parallels/Desktop/gp/src/Map.js\";\nimport React, { Component } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nvar containerStyle = {\n  width: '1400px',\n  height: '800px'\n};\n\nfunction MyComponent() {\n  var _this = this;\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var getLocation = function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(_this.updateLocation);\n    }\n  };\n\n  var updateLocation = function updateLocation(position) {\n    _this.setState({\n      center: {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      }\n    }, function () {\n      // console.log(this.map);\n      // 定位完成後，刪掉起始位置的marker\n      _this.marker.setMap(null); // 新增現在位置的marker\n\n\n      _this.marker = new GoogleMap.maps.Marker({\n        position: new GoogleMap.maps.LatLng(_this.state.center.lat, _this.state.center.lng),\n        map: _this.map\n      });\n\n      _this.map.setCenter(_this.state.center);\n\n      _this.map.setZoom(16);\n    });\n  };\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      map = _React$useState2[0],\n      setMap = _React$useState2[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  var num = 0;\n  getLocation();\n  updateLocation();\n  return isLoaded ? /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  }, \"hello\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(num) {\n      return num + 1;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }\n  }, num)), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default MyComponent;","map":{"version":3,"names":["React","Component","GoogleMap","useJsApiLoader","containerStyle","width","height","MyComponent","id","googleMapsApiKey","isLoaded","getLocation","navigator","geolocation","getCurrentPosition","updateLocation","position","setState","center","lat","coords","latitude","lng","longitude","marker","setMap","maps","Marker","LatLng","state","map","setCenter","setZoom","useState","onLoad","useCallback","callback","bounds","window","google","LatLngBounds","fitBounds","onUnmount","num"],"sources":["/home/parallels/Desktop/gp/src/Map.js"],"sourcesContent":["import React ,{Component}from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '1400px',\n  height: '800px'\n};\n\n\nfunction MyComponent() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\"\n  })\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.updateLocation);\n    }\n}\n\nconst updateLocation = (position) => {\n    this.setState({\n        center: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n        }\n    }, () => {\n        // console.log(this.map);\n        // 定位完成後，刪掉起始位置的marker\n        this.marker.setMap(null);\n        // 新增現在位置的marker\n        this.marker = new GoogleMap.maps.Marker({\n            position: new GoogleMap.maps.LatLng(this.state.center.lat, this.state.center.lng),\n            map: this.map,\n            \n        });\n        this.map.setCenter(this.state.center);\n        this.map.setZoom(16);  \n    });\n}\n\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n  const num = 0;\n  getLocation()\n  updateLocation()\n  return isLoaded ? (\n    <body>\n      <div><h1>hello</h1><button onClick={(num) => num +1}>{num}</button></div>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n      \n      </body>\n  ) : <></>\n  \n}\n\nexport default MyComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}