{"ast":null,"code":"var os = require('os');\n\nvar _getMacAddress;\n\nvar _validIfaceRegExp = '^[a-z0-9]+$';\n\nswitch (os.platform()) {\n  case 'win32':\n    // windows has long interface names which may contain spaces and dashes\n    _validIfaceRegExp = '^[a-z0-9 -]+$';\n    _getMacAddress = require('./platform/getmacaddress_windows.js');\n    break;\n\n  case 'linux':\n    _getMacAddress = require('./platform/getmacaddress_linux.js');\n    break;\n\n  case 'darwin':\n  case 'sunos':\n  case 'freebsd':\n    _getMacAddress = require('./platform/getmacaddress_unix.js');\n    break;\n\n  default:\n    console.warn(\"node-macaddress: Unknown os.platform(), defaulting to 'unix'.\");\n    _getMacAddress = require('./platform/getmacaddress_unix.js');\n    break;\n}\n\nvar validIfaceRegExp = new RegExp(_validIfaceRegExp, 'i');\n\nmodule.exports = function (iface, callback) {\n  // some platform specific ways of resolving the mac address pass the name\n  // of the interface down to some command processor, so check for a well\n  // formed string here.\n  if (!validIfaceRegExp.test(iface)) {\n    callback(new Error(['invalid iface: \\'', iface, '\\' (must conform to reg exp /', validIfaceRegExp, '/)'].join('')), null);\n    return;\n  }\n\n  _getMacAddress(iface, callback);\n};","map":null,"metadata":{},"sourceType":"script"}