{"ast":null,"code":"var _jsxFileName = \"/home/parallels/Desktop/gp/src/Map2.js\";\nimport React, { useMemo } from 'react';\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nexport default function App() {\n  var _useLoadScript = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\"\n  }),\n      isLoaded = _useLoadScript.isLoaded;\n\n  if (!isLoaded) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 24\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  });\n}\nvar containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\n\nfunction initialize() {\n  function success(position) {\n    var latitude = position.coords.latitude;\n    var longitude = position.coords.longitude; //var map = new google.maps.Map(document.getElementById(\"googleMap\"), yourmap);\n    //var marker = new google.maps.Marker({position:new google.maps.LatLng(latitude,longitude)});\n    //marker.setMap(map);\n    //var infowindow = new google.maps.InfoWindow({content:\"i'm here!\"});\n    //infowindow.open(map,marker);\n  }\n\n  ;\n\n  function error() {\n    alert('the position is not allowed');\n  }\n\n  ;\n  var geo_options = {\n    enableHighAccuracy: true,\n    maximumAge: 30000,\n    timeout: 27000\n  };\n\n  if (\"geolocation\" in navigator) {\n    navigator.geolocation.watchPosition(success, error, geo_options);\n  } else {\n    alert('the position is not allowed');\n  }\n}\n\nfunction Map() {\n  var center = useMemo(function () {\n    return {\n      lat: initialize.success.latitude,\n      lng: initialize.success.longitude\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    zoom: 16,\n    center: center,\n    mapContainerStyle: containerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"names":["React","useMemo","GoogleMap","useLoadScript","Marker","App","googleMapsApiKey","isLoaded","containerStyle","width","height","initialize","success","position","latitude","coords","longitude","error","alert","geo_options","enableHighAccuracy","maximumAge","timeout","navigator","geolocation","watchPosition","Map","center","lat","lng"],"sources":["/home/parallels/Desktop/gp/src/Map2.js"],"sourcesContent":["import React ,{useMemo} from 'react';\nimport { GoogleMap , useLoadScript , Marker} from '@react-google-maps/api';\n\n\nexport default function App(){\n\n  const {isLoaded } = useLoadScript({\n    googleMapsApiKey :\"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\",\n    \n  });\n  \n  if(!isLoaded) return <div>Loading...</div>;\n  return <Map/>;\n\n}\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\n\nfunction initialize(){\n    function success(position){\n        var latitude = position.coords.latitude;\n        var longitude = position.coords.longitude;\n        //var map = new google.maps.Map(document.getElementById(\"googleMap\"), yourmap);\n        //var marker = new google.maps.Marker({position:new google.maps.LatLng(latitude,longitude)});\n        //marker.setMap(map);\n        //var infowindow = new google.maps.InfoWindow({content:\"i'm here!\"});\n        //infowindow.open(map,marker);\n\n    };\n\n    function error(){\n        alert('the position is not allowed');\n    };\n    var geo_options = {\n        enableHighAccuracy: true,\n        maximumAge:30000,\n        timeout:27000\n    };\n\n    if(\"geolocation\" in navigator){\n        navigator.geolocation.watchPosition(success,error,geo_options);\n        \n    }else{\n        alert('the position is not allowed');\n    }\n\n}    \nfunction Map(){\n  const center = useMemo(() => ({lat : initialize.success.latitude, lng :initialize.success.longitude}) , []);\n  return (\n  <GoogleMap \n    zoom={16} \n    center={center}\n    mapContainerStyle={containerStyle}\n  >\n    <Marker position= {center}/>\n\n   </GoogleMap> \n\n    )\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,SAASC,SAAT,EAAqBC,aAArB,EAAqCC,MAArC,QAAkD,wBAAlD;AAGA,eAAe,SAASC,GAAT,GAAc;EAAA,qBAEPF,aAAa,CAAC;IAChCG,gBAAgB,EAAE;EADc,CAAD,CAFN;EAAA,IAEpBC,QAFoB,kBAEpBA,QAFoB;;EAO3B,IAAG,CAACA,QAAJ,EAAc,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAP;EACd,oBAAO,oBAAC,GAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;AAED;AACD,IAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MADc;EAErBC,MAAM,EAAE;AAFa,CAAvB;;AAKA,SAASC,UAAT,GAAqB;EACjB,SAASC,OAAT,CAAiBC,QAAjB,EAA0B;IACtB,IAAIC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAA/B;IACA,IAAIE,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAhC,CAFsB,CAGtB;IACA;IACA;IACA;IACA;EAEH;;EAAA;;EAED,SAASC,KAAT,GAAgB;IACZC,KAAK,CAAC,6BAAD,CAAL;EACH;;EAAA;EACD,IAAIC,WAAW,GAAG;IACdC,kBAAkB,EAAE,IADN;IAEdC,UAAU,EAAC,KAFG;IAGdC,OAAO,EAAC;EAHM,CAAlB;;EAMA,IAAG,iBAAiBC,SAApB,EAA8B;IAC1BA,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoCb,OAApC,EAA4CK,KAA5C,EAAkDE,WAAlD;EAEH,CAHD,MAGK;IACDD,KAAK,CAAC,6BAAD,CAAL;EACH;AAEJ;;AACD,SAASQ,GAAT,GAAc;EACZ,IAAMC,MAAM,GAAG1B,OAAO,CAAC;IAAA,OAAO;MAAC2B,GAAG,EAAGjB,UAAU,CAACC,OAAX,CAAmBE,QAA1B;MAAoCe,GAAG,EAAElB,UAAU,CAACC,OAAX,CAAmBI;IAA5D,CAAP;EAAA,CAAD,EAAkF,EAAlF,CAAtB;EACA,oBACA,oBAAC,SAAD;IACE,IAAI,EAAE,EADR;IAEE,MAAM,EAAEW,MAFV;IAGE,iBAAiB,EAAEnB,cAHrB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAKE,oBAAC,MAAD;IAAQ,QAAQ,EAAGmB,MAAnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALF,CADA;AAWD"},"metadata":{},"sourceType":"module"}