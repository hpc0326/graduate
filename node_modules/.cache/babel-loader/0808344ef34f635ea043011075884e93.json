{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/parallels/Desktop/gp/src/Map2.js\";\n\nimport React, { Component } from 'react';\nimport { GoogleMap, LoadScript } from 'react-google-maps';\nimport { Wrapper, Status } from \"@googlemaps/react-wrapper\";\n\nvar render = function render(status) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 10\n    }\n  }, status);\n};\n\nvar google = window.google;\nvar containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nvar center = {\n  lat: -3.745,\n  lng: -38.523\n};\nvar options = {\n  zoomControlOptions: {\n    position: google.maps.ControlPosition.RIGHT_CENTER // ,\n    // ...otherOptions\n\n  }\n};\n\nfunction Map() {\n  var _this2 = this;\n\n  var _React$useLoadScript = React.useLoadScript({\n    googleMapsApiKey: \"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\" // ,\n    // ...otherOptions\n\n  }),\n      isLoaded = _React$useLoadScript.isLoaded,\n      loadError = _React$useLoadScript.loadError;\n\n  var renderMap = function renderMap() {\n    // wrapping to a function is useful in case you want to access `window.google`\n    // to eg. setup options or create latLng object, it won't be available otherwise\n    // feel free to render directly if you don't need that\n    var onLoad = React.useCallback(function onLoad(mapInstance) {// do something with map Instance\n    });\n    return /*#__PURE__*/React.createElement(GoogleMap, {\n      options: options,\n      onLoad: onLoad,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  };\n\n  if (loadError) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    }, \"Map cannot be loaded right now, sorry.\");\n  }\n\n  return isLoaded( /*#__PURE__*/React.createElement(Wrapper, {\n    apiKey: \"YOUR_API_KEY\",\n    render: render,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(YourComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  })));\n}\n\nexport default Map;","map":{"version":3,"names":["React","Component","GoogleMap","LoadScript","Wrapper","Status","render","status","google","window","containerStyle","width","height","center","lat","lng","options","zoomControlOptions","position","maps","ControlPosition","RIGHT_CENTER","Map","useLoadScript","googleMapsApiKey","isLoaded","loadError","renderMap","onLoad","useCallback","mapInstance"],"sources":["/home/parallels/Desktop/gp/src/Map2.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { GoogleMap, LoadScript  } from 'react-google-maps';\nimport { Wrapper, Status } from \"@googlemaps/react-wrapper\";\n\nconst render = (status: Status) => {\n  return <h1>{status}</h1>;\n};\n\n\n\n\nconst google = window.google;\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\n\nconst options = {\n  zoomControlOptions: {\n    position: google.maps.ControlPosition.RIGHT_CENTER // ,\n    // ...otherOptions\n  }\n}\n\nfunction Map() {\n  const { isLoaded, loadError } = React.useLoadScript({\n    googleMapsApiKey: \"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\" // ,\n    // ...otherOptions\n  })\n\n  const renderMap = () => {\n    // wrapping to a function is useful in case you want to access `window.google`\n    // to eg. setup options or create latLng object, it won't be available otherwise\n    // feel free to render directly if you don't need that\n    const onLoad = React.useCallback(\n      function onLoad (mapInstance) {\n        // do something with map Instance\n      }\n    )\n    return <GoogleMap\n      options={options}\n      onLoad={onLoad}\n    >\n      {\n        // ...Your map components\n      }\n    </GoogleMap>\n  }\n\n  if (loadError) {\n    return <div>Map cannot be loaded right now, sorry.</div>\n  }\n\n  return isLoaded(\n  <Wrapper apiKey={\"YOUR_API_KEY\"} render={render}>\n  <YourComponent/>\n</Wrapper>)\n}\n\nexport default Map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAuC,mBAAvC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,2BAAhC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAAoB;EACjC,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKA,MAAL,CAAP;AACD,CAFD;;AAOA,IAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AACA,IAAME,cAAc,GAAG;EACrBC,KAAK,EAAE,OADc;EAErBC,MAAM,EAAE;AAFa,CAAvB;AAKA,IAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,KADO;EAEbC,GAAG,EAAE,CAAC;AAFO,CAAf;AAMA,IAAMC,OAAO,GAAG;EACdC,kBAAkB,EAAE;IAClBC,QAAQ,EAAEV,MAAM,CAACW,IAAP,CAAYC,eAAZ,CAA4BC,YADpB,CACiC;IACnD;;EAFkB;AADN,CAAhB;;AAOA,SAASC,GAAT,GAAe;EAAA;;EAAA,2BACmBtB,KAAK,CAACuB,aAAN,CAAoB;IAClDC,gBAAgB,EAAE,yCADgC,CACU;IAC5D;;EAFkD,CAApB,CADnB;EAAA,IACLC,QADK,wBACLA,QADK;EAAA,IACKC,SADL,wBACKA,SADL;;EAMb,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtB;IACA;IACA;IACA,IAAMC,MAAM,GAAG5B,KAAK,CAAC6B,WAAN,CACb,SAASD,MAAT,CAAiBE,WAAjB,EAA8B,CAC5B;IACD,CAHY,CAAf;IAKA,oBAAO,oBAAC,SAAD;MACL,OAAO,EAAEd,OADJ;MAEL,MAAM,EAAEY,MAFH;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EAQD,CAjBD;;EAmBA,IAAIF,SAAJ,EAAe;IACb,oBAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,4CAAP;EACD;;EAED,OAAOD,QAAQ,eACf,oBAAC,OAAD;IAAS,MAAM,EAAE,cAAjB;IAAiC,MAAM,EAAEnB,MAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,aAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADA,CADe,CAAf;AAID;;AAED,eAAegB,GAAf"},"metadata":{},"sourceType":"module"}