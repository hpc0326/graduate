{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * High Order Component\n * that provides info about the connection type/speed\n * to the wrapped components.\n * You can use it to hide/show a section of a page based\n * on users internet type/speed.\n * <br/><br/>\n * [![Build Status](https://travis-ci.org/AvraamMavridis/react-network-info.svg?branch=master)](https://travis-ci.org/AvraamMavridis/react-network-info) [![Greenkeeper badge](https://badges.greenkeeper.io/AvraamMavridis/react-network-info.svg)](https://greenkeeper.io/) <br/> <a href=\"https://nodei.co/npm/react-network-info/\"><img src=\"https://nodei.co/npm/react-network-info.png?mini=true\"></a><br/><br/>\n *\n *\n *  The following properties are passed to the wrapped components\n *  - <strong>downlink</strong> : The effective bandwidth estimate in megabits per secondrounded to the nearest multiple of 25 kilobits per seconds.\n *  - <strong>effectiveType</strong> : The effective type of the connection meaning one of 'slow-2g', '2g', '3g', or '4g'. This value is determined using a combination of recently observed, round-trip time and downlink values.\n *  - <strong>rtt</strong> : The estimated effective round-trip time of the current connection, rounded to the nearest multiple of 25 milliseconds.\n *\n * @class NetworkInformation\n * @extends {Component}\n */\n\n\nvar NetworkInformation = function (_Component) {\n  _inherits(NetworkInformation, _Component);\n\n  function NetworkInformation() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, NetworkInformation);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = NetworkInformation.__proto__ || Object.getPrototypeOf(NetworkInformation)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      downlink: Infinity,\n      effectiveType: undefined,\n      rtt: Infinity\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(NetworkInformation, [{\n    key: 'updateConnectionStatus',\n\n    /**\n     * Update the connection info\n     */\n    value: function updateConnectionStatus() {\n      this.setState({\n        /**\n         * Returns the effective bandwidth estimate in megabits per second,\n         * rounded to the nearest multiple of 25 kilobits per seconds.\n        */\n        downlink: this.connection.downlink,\n\n        /**\n         * Returns the effective type of the connection\n         * meaning one of 'slow-2g', '2g', '3g', or '4g'.\n         * This value is determined using a combination of\n         * recently observed, round-trip time and downlink values.\n        */\n        effectiveType: this.connection.effectiveType,\n\n        /**\n         * Returns the estimated effective round-trip\n         * time of the current connection, rounded to\n         * the nearest multiple of 25 milliseconds.\n        */\n        rtt: this.connection.rtt\n      });\n    }\n    /**\n     * Attach listener for the connection\n     */\n\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.connection = window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection;\n\n      if (this.connection) {\n        this.updateConnectionStatus();\n        this.connection.addEventListener('typechange', this.updateConnectionStatus);\n      }\n    }\n    /**\n     * Remove listener\n     */\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.connection) {\n        this.connection.removeEventListener('typechange', this.updateConnectionStatus);\n      }\n    }\n    /**\n     * Render component\n     *\n     * @returns {JSX.Element}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var children = this.props.children;\n\n      if (typeof children === 'function') {\n        return children(this.state);\n      }\n\n      return _react2.default.Children.map(children, function (child) {\n        return _react2.default.cloneElement(child, _this2.state);\n      });\n    }\n  }]);\n\n  return NetworkInformation;\n}(_react.Component);\n\nNetworkInformation.propTypes = {\n  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])\n};\nexports.default = NetworkInformation;","map":null,"metadata":{},"sourceType":"script"}