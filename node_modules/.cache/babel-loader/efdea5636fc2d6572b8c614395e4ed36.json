{"ast":null,"code":"import _slicedToArray from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/parallels/Desktop/gp/src/Map3_1.js\";\nimport React, { setState } from \"react\";\nimport './App.css';\nexport default function App() {\n  var _setState = setState(0),\n      _setState2 = _slicedToArray(_setState, 2),\n      latitude = _setState2[0],\n      setLat = _setState2[1];\n\n  var _setState3 = setState(0),\n      _setState4 = _slicedToArray(_setState3, 2),\n      longitude = _setState4[0],\n      setLng = _setState4[1]; //const [userAddress , setUrad] = setState(null);\n\n\n  var getLocation = function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(getCoordinates, handleLocationError);\n    } else {\n      alert(\"Geolocaiton is not supported in the browser\");\n    }\n  };\n\n  var getCoordinates = function getCoordinates(position) {\n    setLat(position.coords.latitude);\n    setLng(position.coords.longitude);\n  };\n\n  var handleLocationError = function handleLocationError(error) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\"User denied the request for Geolocation\");\n        break;\n\n      case error.POSITION_UNAVAILABLE:\n        alert('Location information is unavailable.');\n        break;\n\n      case error.TIMEOUT:\n        alert(\"The request to get user location timed out.\");\n        break;\n\n      case error.UNKNOWN_ERROR:\n        alert('An unknown error occurred.');\n        break;\n\n      default:\n        alert('An unknown error occurred.');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"React Geolocation Example\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"get location\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"html\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"latitude:\", latitude), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"longitude:\", longitude));\n}\n/*\nclass App extends React.Component{\n \n  render() {\n    const map = new Map();\n \n    \n    return(\n     <div className=\"App\">\n     <h2>React Geolocation Example</h2>\n     <button onClick={this.getLocation}>get location</button>\n     <h4>html</h4>\n     <p>latitude:{this.state.latitude}</p>\n     <p>longitude:{this.state.longitude}</p>\n   </div> );\n  }\n}*/","map":{"version":3,"names":["React","setState","App","latitude","setLat","longitude","setLng","getLocation","navigator","geolocation","getCurrentPosition","getCoordinates","handleLocationError","alert","position","coords","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR"],"sources":["/home/parallels/Desktop/gp/src/Map3_1.js"],"sourcesContent":["import React,{setState} from \"react\";\nimport './App.css'\n\n    \nexport default function App() {\n    const [latitude , setLat] = setState(0);\n    const [longitude , setLng] = setState(0);\n    //const [userAddress , setUrad] = setState(null);\n\n    const getLocation = () => {\n        if(navigator.geolocation){\n          navigator.geolocation.getCurrentPosition(getCoordinates ,handleLocationError);\n    \n        }else{\n          alert(\"Geolocaiton is not supported in the browser\")\n        }\n      }\n\n    const getCoordinates = (position) =>{\n        setLat(position.coords.latitude);\n        setLng(position.coords.longitude);\n    \n    }\n\n    const  handleLocationError = (error) => {\n        switch(error.code){\n          case error.PERMISSION_DENIED:\n            alert(\"User denied the request for Geolocation\")\n            break;\n          case error.POSITION_UNAVAILABLE:\n            alert('Location information is unavailable.')\n            break;\n          case error.TIMEOUT:\n            alert(\"The request to get user location timed out.\")\n            break;\n          case error.UNKNOWN_ERROR:\n            alert('An unknown error occurred.')\n            break;\n          default:\n            alert('An unknown error occurred.')\n        }\n      }\n    return (\n      <div className=\"App\">\n        <h2>React Geolocation Example</h2>\n        <button onClick={getLocation}>get location</button>\n        <h4>html</h4>\n        <p>latitude:{latitude}</p>\n        <p>longitude:{longitude}</p>\n      </div>\n    )\n\n}\n\n\n\n/*\nclass App extends React.Component{\n \n  render() {\n    const map = new Map();\n \n    \n    return(\n     <div className=\"App\">\n     <h2>React Geolocation Example</h2>\n     <button onClick={this.getLocation}>get location</button>\n     <h4>html</h4>\n     <p>latitude:{this.state.latitude}</p>\n     <p>longitude:{this.state.longitude}</p>\n   </div> );\n  }\n}*/\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP;AAGA,eAAe,SAASC,GAAT,GAAe;EAAA,gBACED,QAAQ,CAAC,CAAD,CADV;EAAA;EAAA,IACnBE,QADmB;EAAA,IACRC,MADQ;;EAAA,iBAEGH,QAAQ,CAAC,CAAD,CAFX;EAAA;EAAA,IAEnBI,SAFmB;EAAA,IAEPC,MAFO,kBAG1B;;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACtB,IAAGC,SAAS,CAACC,WAAb,EAAyB;MACvBD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,cAAzC,EAAyDC,mBAAzD;IAED,CAHD,MAGK;MACHC,KAAK,CAAC,6CAAD,CAAL;IACD;EACF,CAPH;;EASA,IAAMF,cAAc,GAAG,SAAjBA,cAAiB,CAACG,QAAD,EAAa;IAChCV,MAAM,CAACU,QAAQ,CAACC,MAAT,CAAgBZ,QAAjB,CAAN;IACAG,MAAM,CAACQ,QAAQ,CAACC,MAAT,CAAgBV,SAAjB,CAAN;EAEH,CAJD;;EAMA,IAAOO,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACI,KAAD,EAAW;IACpC,QAAOA,KAAK,CAACC,IAAb;MACE,KAAKD,KAAK,CAACE,iBAAX;QACEL,KAAK,CAAC,yCAAD,CAAL;QACA;;MACF,KAAKG,KAAK,CAACG,oBAAX;QACEN,KAAK,CAAC,sCAAD,CAAL;QACA;;MACF,KAAKG,KAAK,CAACI,OAAX;QACEP,KAAK,CAAC,6CAAD,CAAL;QACA;;MACF,KAAKG,KAAK,CAACK,aAAX;QACER,KAAK,CAAC,4BAAD,CAAL;QACA;;MACF;QACEA,KAAK,CAAC,4BAAD,CAAL;IAdJ;EAgBD,CAjBH;;EAkBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,+BADF,eAEE;IAAQ,OAAO,EAAEN,WAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAFF,eAGE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAHF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAaJ,QAAb,CAJF,eAKE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAAcE,SAAd,CALF,CADF;AAUH;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}