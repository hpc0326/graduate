{"ast":null,"code":"import _classCallCheck from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/parallels/Desktop/gp/src/Map2.js\";\nimport React, { useMemo } from 'react';\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      latitude: 0,\n      longitude: 0,\n      userAddress: null\n    };\n    _this.getLocation = _this.getLocation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getCoordinates = _this.getCoordinates.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getLocation\",\n    value: function getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\n      } else {\n        alert(\"Geolocaiton is not supported in the browser\");\n      }\n    }\n  }, {\n    key: \"getCoordinates\",\n    value: function getCoordinates(position) {\n      this.setState({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      });\n    }\n  }, {\n    key: \"handleLocationError\",\n    value: function handleLocationError(error) {\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          alert(\"User denied the request for Geolocation\");\n          break;\n\n        case error.POSITION_UNAVAILABLE:\n          alert('Location information is unavailable.');\n          break;\n\n        case error.TIMEOUT:\n          alert(\"The request to get user location timed out.\");\n          break;\n\n        case error.UNKNOWN_ERROR:\n          alert('An unknown error occurred.');\n          break;\n\n        default:\n          alert('An unknown error occurred.');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      /*const {isLoaded } = useLoadScript({\n        googleMapsApiKey :\"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\",\n        \n      });\n      \n      \n      if(!isLoaded) return <div>Loading...</div>;\n      */\n      var center = {\n        lat: 0,\n        lng: 0\n      };\n      var containerStyle = {\n        width: '100%',\n        height: '100vh'\n      };\n      return /*#__PURE__*/React.createElement(GoogleMap, {\n        zoom: 18,\n        center: center,\n        mapContainerStyle: containerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Marker, {\n        key: Math.random(),\n        position: {\n          lat: this.state.latitude,\n          lng: this.state.longitude\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n/*const direct = new Direct();\n\nexport default function App(){\n\n  \n  const {isLoaded } = useLoadScript({\n    googleMapsApiKey :\"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\",\n    \n  });\n  \n  \n\n  const center = useMemo(() => ({lat : direct.latitude, lng :direct.longitude}) , []);\n  \n  const containerStyle = {\n    width: '100%',\n    height: '100vh'\n  };\n  \n  if(!isLoaded) return <div>Loading...</div>;\n\n  return(\n  <GoogleMap \n    zoom={18} \n    center={center}\n    mapContainerStyle={containerStyle}\n  >\n    <Marker key={Math.random()} position= {{lat : 24.1502478, lng :120.7159799}}/>\n\n   </GoogleMap> );\n\n}*/\n\n\nexport { App as default };","map":{"version":3,"names":["React","useMemo","GoogleMap","useLoadScript","Marker","App","props","state","latitude","longitude","userAddress","getLocation","bind","getCoordinates","navigator","geolocation","getCurrentPosition","handleLocationError","alert","position","setState","coords","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","center","lat","lng","containerStyle","width","height","Math","random","Component"],"sources":["/home/parallels/Desktop/gp/src/Map2.js"],"sourcesContent":["import React ,{useMemo} from 'react';\nimport { GoogleMap , useLoadScript , Marker} from '@react-google-maps/api';\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      latitude:0,\n      longitude:0,\n      userAddress:null\n    };\n    this.getLocation = this.getLocation.bind(this);\n    this.getCoordinates = this.getCoordinates.bind(this);\n  }\n\n  getLocation(){\n    if(navigator.geolocation){\n      navigator.geolocation.getCurrentPosition(this.getCoordinates , this.handleLocationError);\n\n    }else{\n      alert(\"Geolocaiton is not supported in the browser\")\n    }\n  }\n\n  getCoordinates(position){\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude:position.coords.longitude\n    })\n  }\n\n\n  handleLocationError(error){\n    switch(error.code){\n      case error.PERMISSION_DENIED:\n        alert(\"User denied the request for Geolocation\")\n        break;\n      case error.POSITION_UNAVAILABLE:\n        alert('Location information is unavailable.')\n        break;\n      case error.TIMEOUT:\n        alert(\"The request to get user location timed out.\")\n        break;\n      case error.UNKNOWN_ERROR:\n        alert('An unknown error occurred.')\n        break;\n      default:\n        alert('An unknown error occurred.')\n    }\n  }\n\n  render(){\n    /*const {isLoaded } = useLoadScript({\n      googleMapsApiKey :\"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\",\n      \n    });\n    \n    \n    if(!isLoaded) return <div>Loading...</div>;\n*/\n    const center = {lat : 0, lng :0};\n    \n    const containerStyle = {\n      width: '100%',\n      height: '100vh'\n    };\n    \n    return(\n      <GoogleMap \n        zoom={18} \n        center={center}\n        mapContainerStyle={containerStyle}\n      >\n        <Marker key={Math.random()} position= {{lat : this.state.latitude, lng :this.state.longitude}}/>\n    \n       </GoogleMap> );\n  }\n}\n\n\n/*const direct = new Direct();\n\nexport default function App(){\n\n  \n  const {isLoaded } = useLoadScript({\n    googleMapsApiKey :\"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\",\n    \n  });\n  \n  \n\n  const center = useMemo(() => ({lat : direct.latitude, lng :direct.longitude}) , []);\n  \n  const containerStyle = {\n    width: '100%',\n    height: '100vh'\n  };\n  \n  if(!isLoaded) return <div>Loading...</div>;\n\n  return(\n  <GoogleMap \n    zoom={18} \n    center={center}\n    mapContainerStyle={containerStyle}\n  >\n    <Marker key={Math.random()} position= {{lat : 24.1502478, lng :120.7159799}}/>\n\n   </GoogleMap> );\n\n}*/\n\n\n\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,SAASC,SAAT,EAAqBC,aAArB,EAAqCC,MAArC,QAAkD,wBAAlD;;IAEqBC,G;;;EACnB,aAAYC,KAAZ,EAAkB;IAAA;;IAAA;;IAChB,yEAAMA,KAAN;IACA,MAAKC,KAAL,GAAW;MACTC,QAAQ,EAAC,CADA;MAETC,SAAS,EAAC,CAFD;MAGTC,WAAW,EAAC;IAHH,CAAX;IAKA,MAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;IACA,MAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;IARgB;EASjB;;;;kCAEY;MACX,IAAGE,SAAS,CAACC,WAAb,EAAyB;QACvBD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKH,cAA9C,EAA+D,KAAKI,mBAApE;MAED,CAHD,MAGK;QACHC,KAAK,CAAC,6CAAD,CAAL;MACD;IACF;;;mCAEcC,Q,EAAS;MACtB,KAAKC,QAAL,CAAc;QACZZ,QAAQ,EAAEW,QAAQ,CAACE,MAAT,CAAgBb,QADd;QAEZC,SAAS,EAACU,QAAQ,CAACE,MAAT,CAAgBZ;MAFd,CAAd;IAID;;;wCAGmBa,K,EAAM;MACxB,QAAOA,KAAK,CAACC,IAAb;QACE,KAAKD,KAAK,CAACE,iBAAX;UACEN,KAAK,CAAC,yCAAD,CAAL;UACA;;QACF,KAAKI,KAAK,CAACG,oBAAX;UACEP,KAAK,CAAC,sCAAD,CAAL;UACA;;QACF,KAAKI,KAAK,CAACI,OAAX;UACER,KAAK,CAAC,6CAAD,CAAL;UACA;;QACF,KAAKI,KAAK,CAACK,aAAX;UACET,KAAK,CAAC,4BAAD,CAAL;UACA;;QACF;UACEA,KAAK,CAAC,4BAAD,CAAL;MAdJ;IAgBD;;;6BAEO;MACN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI,IAAMU,MAAM,GAAG;QAACC,GAAG,EAAG,CAAP;QAAUC,GAAG,EAAE;MAAf,CAAf;MAEA,IAAMC,cAAc,GAAG;QACrBC,KAAK,EAAE,MADc;QAErBC,MAAM,EAAE;MAFa,CAAvB;MAKA,oBACE,oBAAC,SAAD;QACE,IAAI,EAAE,EADR;QAEE,MAAM,EAAEL,MAFV;QAGE,iBAAiB,EAAEG,cAHrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAKE,oBAAC,MAAD;QAAQ,GAAG,EAAEG,IAAI,CAACC,MAAL,EAAb;QAA4B,QAAQ,EAAG;UAACN,GAAG,EAAG,KAAKtB,KAAL,CAAWC,QAAlB;UAA4BsB,GAAG,EAAE,KAAKvB,KAAL,CAAWE;QAA5C,CAAvC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EALF,CADF;IASD;;;;EAzE8BT,KAAK,CAACoC,S;AA6EvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SA5GqB/B,G"},"metadata":{},"sourceType":"module"}