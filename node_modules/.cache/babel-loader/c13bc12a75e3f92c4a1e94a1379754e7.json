{"ast":null,"code":"import _slicedToArray from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/parallels/Desktop/gp/src/Map.js\";\nimport React, { Component } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nvar containerStyle = {\n  width: '1400px',\n  height: '800px'\n};\nvar center = {\n  lat: 25.013625,\n  lng: 121.540470\n};\n\nfunction MyComponent() {\n  var _this = this;\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var getLocation = function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(_this.updateLocation);\n    }\n  };\n\n  updateLocation = function updateLocation(position) {\n    _this.setState({\n      center: {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      }\n    }, function () {\n      // console.log(this.map);\n      // 定位完成後，刪掉起始位置的marker\n      _this.marker.setMap(null); // 新增現在位置的marker\n\n\n      _this.marker = new google.maps.Marker({\n        position: new google.maps.LatLng(_this.state.center.lat, _this.state.center.lng),\n        map: _this.map,\n        // 自訂icon圖示\n        icon: location\n      });\n\n      _this.map.setCenter(_this.state.center);\n\n      _this.map.setZoom(16);\n    });\n  };\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      map = _React$useState2[0],\n      setMap = _React$useState2[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  var num = 0;\n  return isLoaded ? /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }\n  }, \"hello\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(num) {\n      return num + 1;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 26\n    }\n  }, num)), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default MyComponent;","map":{"version":3,"names":["React","Component","GoogleMap","useJsApiLoader","containerStyle","width","height","center","lat","lng","MyComponent","id","googleMapsApiKey","isLoaded","getLocation","navigator","geolocation","getCurrentPosition","updateLocation","position","setState","coords","latitude","longitude","marker","setMap","google","maps","Marker","LatLng","state","map","icon","location","setCenter","setZoom","useState","onLoad","useCallback","callback","bounds","window","LatLngBounds","fitBounds","onUnmount","num"],"sources":["/home/parallels/Desktop/gp/src/Map.js"],"sourcesContent":["import React ,{Component}from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '1400px',\n  height: '800px'\n};\n\nconst center = {\n  lat: 25.013625, \n  lng: 121.540470\n};\n\nfunction MyComponent() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\"\n  })\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.updateLocation);\n    }\n}\n\nupdateLocation = (position) => {\n    this.setState({\n        center: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n        }\n    }, () => {\n        // console.log(this.map);\n        // 定位完成後，刪掉起始位置的marker\n        this.marker.setMap(null);\n        // 新增現在位置的marker\n        this.marker = new google.maps.Marker({\n            position: new google.maps.LatLng(this.state.center.lat, this.state.center.lng),\n            map: this.map,\n            // 自訂icon圖示\n            icon: location\n        });\n        this.map.setCenter(this.state.center);\n        this.map.setZoom(16);  \n    });\n}\n\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n  const num = 0;\n  return isLoaded ? (\n    <body>\n      <div><h1>hello</h1><button onClick={(num) => num +1}>{num}</button></div>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n      \n      </body>\n  ) : <></>\n  \n}\n\nexport default MyComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}