{"ast":null,"code":"import _slicedToArray from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/parallels/Desktop/gp/src/App.js\";\n//import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nvar containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nvar center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nfunction MyComponent() {\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"YOUR_API_KEY\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      map = _React$useState2[0],\n      setMap = _React$useState2[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default React.memo(MyComponent);","map":{"version":3,"names":["React","Button","containerStyle","width","height","center","lat","lng","MyComponent","useJsApiLoader","id","googleMapsApiKey","isLoaded","useState","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo"],"sources":["/home/parallels/Desktop/gp/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nfunction MyComponent() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"YOUR_API_KEY\"\n  })\n\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n  ) : <></>\n}\n\nexport default React.memo(MyComponent);\n\n"],"mappings":";;AAAA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,IAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OADc;EAErBC,MAAM,EAAE;AAFa,CAAvB;AAKA,IAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,KADO;EAEbC,GAAG,EAAE,CAAC;AAFO,CAAf;;AAKA,SAASC,WAAT,GAAuB;EAAA,sBACAC,cAAc,CAAC;IAClCC,EAAE,EAAE,mBAD8B;IAElCC,gBAAgB,EAAE;EAFgB,CAAD,CADd;EAAA,IACbC,QADa,mBACbA,QADa;;EAAA,sBAMCZ,KAAK,CAACa,QAAN,CAAe,IAAf,CAND;EAAA;EAAA,IAMdC,GANc;EAAA,IAMTC,MANS;;EAQrB,IAAMC,MAAM,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;IACtD,IAAMK,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,CAAoClB,MAApC,CAAf;IACAS,GAAG,CAACU,SAAJ,CAAcL,MAAd;IACAJ,MAAM,CAACD,GAAD,CAAN;EACD,CAJc,EAIZ,EAJY,CAAf;EAMA,IAAMW,SAAS,GAAGzB,KAAK,CAACiB,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;IACzDC,MAAM,CAAC,IAAD,CAAN;EACD,CAFiB,EAEf,EAFe,CAAlB;EAIA,OAAOH,QAAQ,gBACX,oBAAC,SAAD;IACE,iBAAiB,EAAEV,cADrB;IAEE,MAAM,EAAEG,MAFV;IAGE,IAAI,EAAE,EAHR;IAIE,MAAM,EAAEW,MAJV;IAKE,SAAS,EAAES,SALb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAQE,yCARF,CADW,gBAWX,yCAXJ;AAYD;;AAED,eAAezB,KAAK,CAAC0B,IAAN,CAAWlB,WAAX,CAAf"},"metadata":{},"sourceType":"module"}