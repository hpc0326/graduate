{"ast":null,"code":"import _slicedToArray from \"/home/parallels/Desktop/gp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/parallels/Desktop/gp/src/Map.js\";\nimport React, { Component } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nvar containerStyle = {\n  width: '1400px',\n  height: '800px'\n};\nvar center = {\n  lat: position.coords.latitude,\n  lng: position.coords.longitude\n};\n\nfunction MyComponent() {\n  var _this = this;\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var getLocation = function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(_this.updateLocation);\n    }\n  };\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      map = _React$useState2[0],\n      setMap = _React$useState2[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  var num = 0;\n  return isLoaded ? /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }\n  }, \"hello\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(num) {\n      return num + 1;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 26\n    }\n  }, num)), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default MyComponent;","map":{"version":3,"names":["React","Component","GoogleMap","useJsApiLoader","containerStyle","width","height","center","lat","position","coords","latitude","lng","longitude","MyComponent","id","googleMapsApiKey","isLoaded","getLocation","navigator","geolocation","getCurrentPosition","updateLocation","useState","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","num"],"sources":["/home/parallels/Desktop/gp/src/Map.js"],"sourcesContent":["import React ,{Component}from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '1400px',\n  height: '800px'\n};\n\nconst center = {\n    lat: position.coords.latitude,\n    lng: position.coords.longitude,\n};\n\nfunction MyComponent() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAj6NGGgE6guMZsGqLod-WTNXcJGwq-DAs\"\n  })\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.updateLocation);\n    }\n}\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n  const num = 0;\n  return isLoaded ? (\n    <body>\n      <div><h1>hello</h1><button onClick={(num) => num +1}>{num}</button></div>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n      \n      </body>\n  ) : <></>\n  \n}\n\nexport default MyComponent;"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AAEA,IAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,QADc;EAErBC,MAAM,EAAE;AAFa,CAAvB;AAKA,IAAMC,MAAM,GAAG;EACXC,GAAG,EAAEC,QAAQ,CAACC,MAAT,CAAgBC,QADV;EAEXC,GAAG,EAAEH,QAAQ,CAACC,MAAT,CAAgBG;AAFV,CAAf;;AAKA,SAASC,WAAT,GAAuB;EAAA;;EAAA,sBACAX,cAAc,CAAC;IAClCY,EAAE,EAAE,mBAD8B;IAElCC,gBAAgB,EAAE;EAFgB,CAAD,CADd;EAAA,IACbC,QADa,mBACbA,QADa;;EAMrB,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxB,IAAIC,SAAS,CAACC,WAAd,EAA2B;MACvBD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAI,CAACC,cAA9C;IACH;EACJ,CAJC;;EANqB,sBAWCtB,KAAK,CAACuB,QAAN,CAAe,IAAf,CAXD;EAAA;EAAA,IAWdC,GAXc;EAAA,IAWTC,MAXS;;EAarB,IAAMC,MAAM,GAAG1B,KAAK,CAAC2B,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;IACtD,IAAMK,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,CAAoC1B,MAApC,CAAf;IACAiB,GAAG,CAACU,SAAJ,CAAcL,MAAd;IACAJ,MAAM,CAACD,GAAD,CAAN;EACD,CAJc,EAIZ,EAJY,CAAf;EAMA,IAAMW,SAAS,GAAGnC,KAAK,CAAC2B,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;IACzDC,MAAM,CAAC,IAAD,CAAN;EACD,CAFiB,EAEf,EAFe,CAAlB;EAGA,IAAMW,GAAG,GAAG,CAAZ;EACA,OAAOnB,QAAQ,gBACb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAL,eAAmB;IAAQ,OAAO,EAAE,iBAACmB,GAAD;MAAA,OAASA,GAAG,GAAE,CAAd;IAAA,CAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAmCA,GAAnC,CAAnB,CADF,eAEE,oBAAC,SAAD;IACE,iBAAiB,EAAEhC,cADrB;IAEE,MAAM,EAAEG,MAFV;IAGE,IAAI,EAAE,EAHR;IAIE,MAAM,EAAEmB,MAJV;IAKE,SAAS,EAAES,SALb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAQE,yCARF,CAFF,CADa,gBAeX,yCAfJ;AAiBD;;AAED,eAAerB,WAAf"},"metadata":{},"sourceType":"module"}